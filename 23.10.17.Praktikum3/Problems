Зад. 1
Напишете шаблонен клас стек използвайки свързано представяне.
Зад. 2
Като използвате stl stack, напишете програма, която:
а) Симулира програмния стек при рекурсивната версия на числата на Фибоначи.
void fibonacci(int n, stack<int>& prev);
  fibonacci
  7
  1, 1, 2, 3, 5, 8, 13
  |8|
  |5|
  |3|
  |2|
  |1|
  |1|


б) Проверява дали в даден израз скобите ( от вида ‘<>’, ‘()‘, ‘{}‘, ‘[]‘ )  са правилно разположени.

Примери за коректно конструирани изрази:
""
"ala bala"
"{}"
"()"
"[]"
"({})"
"({[[[()]]]})"
"<<()>>"
"{<[]>}"

Примери за the opposite:
"}{"
")("
"]["
"({[[[(]]]})"

Hint:
Трябва да върнем false, aко:
1). Празен стек && затваряща скоба;
2). Непразен стек && затварящата скоба е различна от тази на върха на стека;
3). Стекът не е празен в края.
ПС:
Може да използвате тези структурки:
struct bracketPair {
    char open;
    char close;
};

bracketPair supportedBrackets[] = {
    { '(', ')' },
    { '[', ']' },
    { '{', '}' },
    { '<', '>' }
};
